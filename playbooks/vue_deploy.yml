#- hosts: all
- hosts: 127.0.0.1

  remote_user: root
  environment:
    PATH: "{{ ansible_env.PATH }}:/usr/local/node/bin"
#  vars:
    #    - remote_port: 22
  #    - remote_host: root@api
  #    - project: FWL-lawyer
  tasks:
    #    - name: ping
    #      ping:
    - name: check out corona
      git:
        #        repo: git@github.com:hpf0532/corona.git
        repo: "{{ git_repo }}"
        dest: '{{ workdir }}/{{ project }}'
        version: '{{ branch }}'
        accept_hostkey: yes
        force: yes
    #        key_file: "/home/hp  f/.ssh/id_rsa"
    #        update: yes
    #      ignore_errors: yes
    - name: source profile
      shell: echo $PATH
      args:
        executable: /bin/bash
    - name: npm install
      no_log: True
      shell: "{{ npm_cmd }}"
      args:
        chdir: '{{ workdir }}/{{ project }}'
    #      npm:
    #        name: npm-script
    #        path: '{{ workdir }}/{{ project }}'
    - name: npm run build
      no_log: True
      shell: "{{ build_cmd }}"
      args:
        chdir: '{{ workdir }}/{{ project }}'
    - name: tar package
      shell: tar -zcf "{{ project }}".tar.gz ./dist/
      args:
        chdir: '{{ workdir }}/{{ project }}'
    #    - name: npm install
    #      shell: "cd /home/hpf/FWL-lawyer; npm install "
    #      args:
    #        executable: /bin/bash
    - name: create dir
      shell: 'ssh -p "{{ remote_port }}" "{{ remote_host }}"  "if [ ! -d /mnt/wwwroot/"{{ project }}" ]; then mkdir -pv /mnt/wwwroot/"{{ project }}"/dist; fi"'
      args:
        executable: /bin/bash

    - name: scp dist package
      shell: 'scp -P "{{ remote_port }}" -r "{{ project }}".tar.gz "{{ remote_host }}":/mnt/wwwroot/"{{ project }}"'
      args:
        chdir: '{{ workdir }}/{{ project }}'
        executable: /bin/bash
    - name: rename origin dir
      shell:  'ssh -p "{{ remote_port }}" "{{ remote_host }}" "mv /mnt/wwwroot/"{{ project }}"/dist /mnt/wwwroot/"{{ project }}"/dist_$(date +"%Y%m%d%H%M")"'
      args:
        executable: /bin/bash
    - name: unzip dist package
      shell: 'ssh -p "{{ remote_port }}" "{{ remote_host }}" "cd /mnt/wwwroot/"{{ project }}"; tar -xf "{{ project }}".tar.gz"'
      args:
        executable: /bin/bash
    - name: change owner for dist dir
      shell: 'ssh -p "{{ remote_port }}" "{{ remote_host }}" "chown -R www.www /mnt/wwwroot/"{{ project }}""'
      args:
        executable: /bin/bash
    - name: roll the dir
      shell:  ssh -p "{{ remote_port }}" "{{ remote_host }}" "cd /mnt/wwwroot/"{{ project }}"; find . -regex './dist_[0-9]*$' -type d | sort -rn | sed -n '6,\$p' | xargs rm -rf "
      #      shell:  'ssh -p "{{ remote_port }}" "{{ remote_host }}" "cd /mnt/wwwroot/"{{ project }}"; find . -regex "./dist_[0-9]\*$" "'
      args:
        executable: /bin/bash